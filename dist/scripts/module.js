Hooks.once("init",()=>{console.log("This code runs once on initialization")});Hooks.once("ready",()=>{console.log("This code runs once core initialization is ready and game data is available"),game==null||game.socket.on("module.goblins-cauldron-foundry-module",c)});function c({eventType:o,payload:e}){switch(console.log("eventType ",o," payload ",e),o){case"UPDATE_CHARACTER":{i(e);break}case"SEND_TO_CHAT":{r(e);break}case"ROLL_DICE":{l(e);break}default:console.log("unknown event type")}}function i(o){var s;const e=[...(s=game.actors)==null?void 0:s.keys()].map(n=>{var t;return(t=game.actors)==null?void 0:t.get(n)}).find(n=>(n==null?void 0:n.name)===o.actorName);if(!e){console.log(`Actor with id ${e==null?void 0:e._id} does not exist.`);return}e.update(o.data),console.log("Actor ",o.data.name," - with ID ",e._id," successfully updated!")}function r(o){var s,n;const e=[...(s=game==null?void 0:game.actors)==null?void 0:s.keys()].map(t=>{var a;return(a=game==null?void 0:game.actors)==null?void 0:a.get(t)}).find(t=>(t==null?void 0:t.name)===o.actorName);if(!e){console.log(`Actor with id ${e==null?void 0:e._id} does not exist.`);return}ChatMessage.create({user:(n=game==null?void 0:game.user)==null?void 0:n._id,speaker:ChatMessage.getSpeaker(),content:o.chatMessage})}function l(o){var n;console.log(`Rolling ${o.count}d${o.diceType}`);const e=o.count+"d"+o.diceType;new Roll(e).toMessage({user:(n=game==null?void 0:game.user)==null?void 0:n._id})}
//# sourceMappingURL=module.js.map
